# set-option -g status-bg black
# set-option -g status-fg white

set -g status-bg '#4e4e4e'
set -g status-fg '#bbbbbb'
set -g status-left-fg '#bbbbbb'
set -g status-left-bg '#4e4e4e'
set -g status-right-fg '#bbbbbb'
set -g status-right-bg '#4e4e4e'

set -g status-left-length 90
set -g status-right-length 60

set-option -g status-justify centre

set-option -g status-left "S-#S:W-#I:P-#P"

# set-window-option -g window-status-current-fg magenta
#set-window-option -g window-status-format '#[dim]#I:#[dim]#W#[fg=grey,dim]'
#set-window-option -g window-status-current-format '[#[fg=white,bold]#I#[fg=white,bold]:#[fg=white,bold]#W#[fg=dim]]'

set -g status-right '#[fg=green][#[fg=white]%b-%d %H:%M:%S#[fg=green]]'

###########################################################################
# General options
# utf8 is on
set -g utf8 on
set -g status-utf8 on
set-window-option -g utf8 on

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 1

# Resize window to the smallest of the *currently connected* clients
# super useful when using "grouped sessions" and multi-monitor setup\
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# increase scrollback buffer size
set -g history-limit 50000

# Do not delay passing Esc keypress
set-option -sg escape-time 50

# Renumber windows when one of them is closed
set -g renumber-windows on

# Set titles
set -g set-titles on
set -g set-titles-string "#W #T"

# Scrolling works as expected
set -ga terminal-overrides ',*256color*:smcup@:rmcup@'

# Define $TERM while in tmux
set -g default-terminal "screen-256color"

# Add True Color support
set -ga terminal-overrides ',*256color*:Tc'

set-option -g default-shell /bin/bash

set-option -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION SSH_TTY WINDOWID XAUTHORITY"
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

# don't spam the terminal with gibberish when copying
# http://unix.stackexchange.com/a/122698/46009
set-option -s set-clipboard off

###########################################################################
# Mouse mode is on by default.
set -g mouse on

# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

bind Z run "\
    tmux show-options -g | grep -q "mouse\\s*on"; \
    if [ \$? = 0 ]; \
    then  \
        toggle=off;  \
    else  \
        toggle=on;  \
    fi;  \
    tmux display-message \"mouse is now: \$toggle\";  \
    tmux set-option -w mouse \$toggle; \
    tmux set-option -g mouse \$toggle; \
    "

###########################################################################
# General keymap
bind m set -g mouse on
bind M set -g mouse off

# Redraw the client (if interrupted by wall, etc)
bind R refresh-client

unbind [
unbind Space
bind Escape copy-mode

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set-window-option -g mode-keys emacs
set -g status-keys emacs

# easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind m previous-window

# source .tmux.conf as suggested in `man tmux`
bind R source-file ~/.tmux.conf \; display-message " Config reloaded.."

# http://unix.stackexchange.com/a/118381
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind u run "tmux capture-pane -e \; tmux display-message 'Copied the current pane to your buffer.'"

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind p paste-buffer

bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

###########################################################################
# Window management / navigation

# move between windows
bind-key C-h previous-window
bind-key C-l next-window

# C-\ (no prefix) to skip to last window we were in before this one
bind -n "C-\\" last-window

# C-Space (no prefix) to tab to next window
bind -n C-Space next-window

###########################################################################
# Pane management / navigation

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# navigation with C-{h,j,k,l} -- NO PREFIX
# https://gist.github.com/mislav/5189704

bind -n C-k run-shell 'tmux-vim-select-pane -U'
bind -n C-j run-shell 'tmux-vim-select-pane -D'
bind -n C-h run-shell 'tmux-vim-select-pane -L'
bind -n C-l run-shell 'tmux-vim-select-pane -R'

# C-g C-k to passthrough a C-k
# C-k is consumed for pane navigation but we want it for kill-to-eol
unbind C-k
bind C-k send-key C-k

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Note on a few prefix options: C-a = 0x01, C-b = 0x02, C-g = 0x06
bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

#source ~/.tmux-local.conf

###########################################################################
# statusbar
### set pane-active-border-bg colour234
#set-window-option -g pane-active-border-fg colour31
#set-window-option -g status-bg colour146
#set-window-option -g status-attr dim
#set-window-option -g status-fg black
#set-window-option -g window-status-current-bg colour29
#set-window-option -g window-status-current-bg colour97

#set -g status-position bottom
#set -g status-justify left
#set -g status-bg colour18
#set -g status-fg colour137
#set -g status-attr dim
#set -g status-left ''
#set -g status-right '#[fg=colour233,bg=colour19,bold] %d/%m #[fg=colour233,bg=colour8,bold] %H:%M:%S '
#set -g status-right-length 50
#set -g status-left-length 20
#set -g status-right '#[fg=colour233,bg=colour19, bold]#(uptime | awk \"{print \\$3}\"|sed \"s/,//\") #[fg=blue]%a%d-%m-%Y %H:%M:%S'
#set -g status-right '#[fg=colour233,bg=colour19, bold]#(uptime -p)'

#setw -g window-status-current-fg colour1
#setw -g window-status-current-bg colour19
#setw -g window-status-current-attr bold
#setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
#set -g status-justify centre # center align window list
#set -g status-left-length 20
#set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
#setw -g window-status-fg colour9
#setw -g window-status-bg colour18
#setw -g window-status-attr none
#setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

#setw -g window-status-bell-attr bold
#setw -g window-status-bell-fg colour255
#setw -g window-status-bell-bg colour1



#set-option -g status on
#set-option -g status-interval 2
#set-option -g status-justify "centre"
#set-option -g status-left-length 60
#set-option -g status-right-length 60
#set-option -g status-left '#(/home/user/Documents/tmux-powerline/powerline.sh left)'
#set-option -g status-right '#(/home/user/Documents/tmux-powerline/powerline.sh right)'
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

#bind C-[ run '/home/user/Documents/tmux-powerline/mute_powerline.sh left'      # Mute left statusbar.
#bind C-] run '/home/user/Documents/tmux-powerline/mute_powerline.sh right'     # Mute right statusbar.
